<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>编程 on NJU AI 通识课</title><link>http://175.27.130.124/scenario/%E7%BC%96%E7%A8%8B/</link><description>Recent content in 编程 on NJU AI 通识课</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 04 Oct 2024 11:18:56 +0800</lastBuildDate><atom:link href="http://175.27.130.124/scenario/%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>代码小浣熊</title><link>http://175.27.130.124/posts/raccoon_code/</link><pubDate>Fri, 04 Oct 2024 11:18:56 +0800</pubDate><guid>http://175.27.130.124/posts/raccoon_code/</guid><description>&lt;p>「代码小浣熊」是基于商汤大语言模型的软件智能研发助手，覆盖软件需求分析、架构设计、代码编写、软件测试等环节，满足用户代码编写、编程学习等各类需求。代码小浣熊支持 Python、Java、JavaScript、C++、Go、SQL 等90+主流编程语言和 VS Code、IntelliJ IDEA 等主流 IDE。在实际应用中，代码小浣熊可帮助开发者提升编程效率超50%。&lt;/p></description></item><item><title>豆包 MarsCode</title><link>http://175.27.130.124/posts/doubao_marscode/</link><pubDate>Fri, 27 Sep 2024 20:32:55 +0800</pubDate><guid>http://175.27.130.124/posts/doubao_marscode/</guid><description>&lt;p>豆包 MarsCode 编程助手是豆包旗下的 AI 编程助手，提供以智能代码补全为代表的 AI 功能，支持主流编程语言及 IDE，能在开发过程中提供单行或整个函数的编写建议，同时支持在用户开发过程中提供代码解释、代码审查、问题修复等辅助功能，提升开发效率与质量。​&lt;/p>
&lt;h2 id="使用场景">使用场景​&lt;/h2>
&lt;h3 id="智能代码操作">智能代码操作​&lt;/h3>
&lt;p>豆包 MarsCode 编程助手提供代码自动补全与生成、问题修复、代码优化等能力，帮助你更高效地完成开发任务。​&lt;/p>
&lt;h3 id="智能问答">智能问答​&lt;/h3>
&lt;p>基于丰富的研发知识，豆包 MarsCode 编程助手可以快速且准确地回答研发相关问题。&lt;/p></description></item><item><title>Amazon Q</title><link>http://175.27.130.124/posts/amazon_q/</link><pubDate>Fri, 27 Sep 2024 20:31:02 +0800</pubDate><guid>http://175.27.130.124/posts/amazon_q/</guid><description>&lt;p>Amazon Q Developer是一款生成式人工智能（AI）驱动的对话助手，可以帮助您理解、构建、扩展和操作AWS应用程序。您可以提出有关AWS架构、您的AWS资源、最佳实践、留档、支持等方面的问题。Amazon Q 不断更新其功能，以便您的问题获得最上下文相关和可操作的答案。&lt;/p>
&lt;p>当在集成开发环境（IDE）中使用时，Amazon Q 提供软件开发帮助。Amazon Q 可以聊天代码，提供内联代码完成，生成新代码，扫描您的代码以查找安全漏洞，并进行代码升级和改进，例如语言更新、调试和优化。&lt;/p>
&lt;p>Amazon Q 由 Amazon Bedrock 提供支持，这是一项完全托管的服务，通过应用编程接口提供基础模型。为 Amazon Q 提供支持的模型已经通过高质量的AWS内容得到了增强，为您提供更完整、可操作和参考的答案，以加速您在AWS上的构建。&lt;/p></description></item><item><title>CodeGeeX</title><link>http://175.27.130.124/posts/codegeex/</link><pubDate>Fri, 27 Sep 2024 20:29:35 +0800</pubDate><guid>http://175.27.130.124/posts/codegeex/</guid><description>&lt;p>CodeGeeX是一款基于大模型的智能编程助手，它可以实现代码的生成与补全、自动为代码添加注释、自动解释代码、自动编写单元测试、实现代码审查Code Review、自动修复代码fixbug、自动生成commit message完成git提交，以及在不同编程语言的代码间实现互译、针对技术和代码问题的智能问答等丰富的功能。帮助开发者显著提高工作效率，CodeGeeX支持300+种编程语言，适配多种主流IDE平台，包括Visual Studio Code， JetBrains IDES，Visual Studio, HBuilderX，DeepIn-IDE等。&lt;/p></description></item><item><title>通义灵码</title><link>http://175.27.130.124/posts/tongyi_lingma/</link><pubDate>Fri, 27 Sep 2024 20:29:19 +0800</pubDate><guid>http://175.27.130.124/posts/tongyi_lingma/</guid><description>&lt;p>通义灵码，是基于通义大模型的智能编程辅助工具，提供行级/函数级实时续写、自然语言生成代码、单元测试生成、代码优化、注释生成、代码解释、研发智能问答、异常报错排查等能力，并针对阿里云的云服务使用场景调优，助力开发者高效、流畅地编码。&lt;/p>
&lt;h2 id="核心场景">核心场景&lt;/h2>
&lt;h3 id="代码智能生成">代码智能生成&lt;/h3>
&lt;p>经过海量优秀开源代码数据训练，可根据当前代码文件及跨文件的上下文，为你生成行级/函数级代码、单元测试、代码优化建议等。沉浸式编码心流，秒级生成速度，让你更专注在技术设计，高质高效地完成编码工作。&lt;/p>
&lt;h3 id="研发智能问答">研发智能问答&lt;/h3>
&lt;p>基于海量研发文档、产品文档、通用研发知识、阿里云的云服务文档和 SDK/OpenAPI 文档等进行问答训练，为你答疑解惑，助你轻松解决研发问题。&lt;/p>
&lt;h2 id="产品优势">产品优势&lt;/h2>
&lt;ul>
&lt;li>跨文件感知让代码生成更贴合业务场景：客户端和模型层同步优化针对代码跨文件上下文感知能力，生成代码更加贴合当前代码库的业务场景。&lt;/li>
&lt;li>适配多 IDE 的原生设计，符合开发者使用习惯：适配 IDE 原生主题、交互模式，让开发者感受到 IDE 的原生视觉和交互体验，更符合开发者使用习惯。&lt;/li>
&lt;li>研发问答、文档/代码搜索能力，打造沉浸式编码：无需切换工具，IDE 客户端内即可满足开发者编码场景中的技术资料检索、技术难题解答的诉求，打造开发者沉浸式编码体验。&lt;/li>
&lt;li>多种企业版方案，灵活选择：提供企业标准版、企业专属版等多种面向企业客户的方案，并提供企业个性化方案，可灵活选择，加速企业内智能研发的规模化落地。&lt;/li>
&lt;/ul>
&lt;h2 id="功能介绍">功能介绍&lt;/h2>
&lt;h3 id="行间代码生成">行间代码生成&lt;/h3>
&lt;ul>
&lt;li>行级/函数级实时续写：根据当前语法和跨文件的代码上下文，实时生成行、函数建议代码；&lt;/li>
&lt;li>注释生成代码：通过注释描述你想要的功能，可直接在编辑器区生成代码，编码心流不间断。&lt;/li>
&lt;/ul>
&lt;h3 id="研发智能问答-1">研发智能问答&lt;/h3>
&lt;ul>
&lt;li>研发问题自由问答：遇到编码疑问、技术难题时，一键唤起通义灵码，无需离开 IDE 客户端，即可快速获得答案和解决思路；&lt;/li>
&lt;li>本地工程问答：通过问答即可快速结合当前仓库进行工程理解、代码查询等，同时可以通过自然语言描述需求，结合当前工程生成简单需求或缺陷的整体修复建议和建议代码；&lt;/li>
&lt;li>企业知识库问答：借助企业知识和数据进行问答，快速构建企业研发知识问答助手，提升团队的工作效率和协作能力。&lt;/li>
&lt;/ul>
&lt;h3 id="智能生成">智能生成&lt;/h3>
&lt;ul>
&lt;li>单元测试生成：支持根据 JUnit、Mockito、Spring Test、unit test、pytest 等框架生成单元测试；&lt;/li>
&lt;li>代码注释生成：一键生成方法注释及行内注释，节省你写代码注释的时间，并能够有效提升代码可读性；&lt;/li>
&lt;li>代码解释：覆盖各种编程语言，选中代码后可自动识别编程语言并生成代码解释；&lt;/li>
&lt;li>提交信息生成：支持一键生成代码 Git 提交信息，并支持设置生成的语言。&lt;/li>
&lt;/ul>
&lt;h3 id="编码问题解决">编码问题解决&lt;/h3>
&lt;ul>
&lt;li>代码优化：深度分析代码及其上下文，迅速识别潜在的编码问题，从简单的语法错误到复杂的性能瓶颈，均能够指出问题所在，并提供具体的优化建议代码；&lt;/li>
&lt;li>代码问题修复：针对编码过程中出现的代码问题（Problem），可以一键给出修复建议，助力开发者快速解决代码问题；&lt;/li>
&lt;li>异常报错智能排查（Java）：当运行出现异常报错时，一键启动报错排查的智能答疑，可结合运行代码、异常堆栈等报错上下文，快速给出排查思路或修复建议代码。&lt;/li>
&lt;/ul>
&lt;h3 id="企业级管理">企业级管理&lt;/h3>
&lt;ul>
&lt;li>统一授权管理：支持统一为企业内开发者的添加使用权限，统一管理企业成员权限；&lt;/li>
&lt;li>统计报表：提供开发者活跃、AI 代码生成占比、问答使用占比等统计数据，帮助企业快速了解使用效果；&lt;/li>
&lt;li>知识管理：高效管理企业私域数据，结合企业数据提供企业知识库问答、企业代码生成增强功能，让编码助手更贴合企业业务场景；&lt;/li>
&lt;li>专属 VPC 部署：企业专属版提供专属 VPC 部署，并支持企业内网连接，全链路保障企业数据安全，满足企业安全合规要求。&lt;/li>
&lt;/ul></description></item><item><title>Devv AI</title><link>http://175.27.130.124/posts/devv_ai/</link><pubDate>Fri, 27 Sep 2024 20:27:37 +0800</pubDate><guid>http://175.27.130.124/posts/devv_ai/</guid><description>&lt;h2 id="devv的主要功能">Devv的主要功能&lt;/h2>
&lt;ul>
&lt;li>编程和技术问题搜索解答：Devv.ai可以提供关于编程、软件开发和人工智能等方面的建议和指导，回答关于编程语言、算法、代码调试、软件开发最佳实践等方面的问题&lt;/li>
&lt;li>预设多种编程语言：Devv.ai搜索引擎预设了Python、Go、JavaScript、Java、SQL、Rust、PHP、C、Swift等10多种编程语言可供选择进行提问&lt;/li>
&lt;li>支持连续对话：Devv.ai允许用户在当前内容上继续提问和进行连续对话，并且回答的内容会在右侧标注参考来源和出处&lt;/li>
&lt;li>多平台使用：Devv.ai支持通过在线网页版、Windows和macOS桌面客户端使用&lt;/li>
&lt;/ul></description></item><item><title>Cursor</title><link>http://175.27.130.124/posts/cursor/</link><pubDate>Wed, 28 Aug 2024 15:15:40 +0800</pubDate><guid>http://175.27.130.124/posts/cursor/</guid><description>&lt;p>Cursor 是一个基于 Visual Studio Code（VS Code）技术构建的高级代码编辑器，专为提高编程效率并更深度地整合 AI 功能而设计。它不仅继承了 VS Code 的强大功能和用户界面，还增加了专门针对 AI 支持的特色功能。&lt;/p>
&lt;p>Cursor通过这些独特的功能，极大地提升了编程的便捷和效率，使开发者能够更有效地利用AI技术进行软件开发。下面是Cursor的三个核心功能&lt;/p>
&lt;ol>
&lt;li>了解您的代码库：用户可以通过聊天界面直接查询代码库中的信息或引用特定的文件或文档。这种方式非常适合快速获取方案或进行代码审查，用户还可以通过简单的点击即可使用模型生成的代码片段。&lt;/li>
&lt;li>Copilot++通过 Cursor 的 Copilot++ 功能，只需按下 Tab 键，编辑器就能预测并自动完成代码，根据上下文推荐下一步可能的代码编辑。这不仅加快了代码编写速度，还提高了开发效率，尤其是在处理复杂代码时能够提供实时的智能支持。&lt;/li>
&lt;li>Cmd-K：使用自然语言编辑：Cursor 的 Cmd-K 功能允许用户使用自然语言指令来编写和更新代码。这意味着用户可以通过简单的文本提示，如“增加一个新方法”或“更新这个函数的参数”，快速执行复杂的编程任务。&lt;/li>
&lt;/ol></description></item><item><title>Github Copilot</title><link>http://175.27.130.124/posts/github_copilot/</link><pubDate>Wed, 28 Aug 2024 15:15:32 +0800</pubDate><guid>http://175.27.130.124/posts/github_copilot/</guid><description>&lt;h1 id="github-copilot">Github Copilot&lt;/h1>
&lt;p>GitHub Copilot 是一款 AI 编码助手，可帮助你更快、更省力地编写代码，从而将更多精力集中在问题解决和协作上。&lt;/p>
&lt;p>GitHub Copilot 已被证明可以提高开发人员的工作效率并加快软件开发的步伐。 有关更多信息，请参阅 GitHub 博客上的“&lt;a href="https://github.blog/2022-09-07-research-quantifying-github-copilots-impact-on-developer-productivity-and-happiness/">研究：量化 GitHub Copilot 对开发人员生产力和幸福感的影响&lt;/a>”。&lt;/p>
&lt;p>有学生教育优惠，可冲&lt;/p>
&lt;p>GitHub Copilot 包括一套功能。 可以使用 Copilot 来完成以下事宜：&lt;/p>
&lt;ul>
&lt;li>在 IDE 中编码时获取代码建议&lt;/li>
&lt;li>与 Copilot 聊天，寻求代码方面的帮助&lt;/li>
&lt;li>使用命令行来寻求 Copilot 的帮助&lt;/li>
&lt;li>针对拉取请求中的更改生成描述（仅限 Copilot Enterprise）&lt;/li>
&lt;li>创建和管理文档集合，即知识库，以用作与 Copilot 聊天的上下文（仅限 Copilot Enterprise）&lt;/li>
&lt;/ul>
&lt;p>Copilot 可用于：&lt;/p>
&lt;ul>
&lt;li>IDE 中&lt;/li>
&lt;li>在 GitHub Mobile 中，作为一个聊天界面&lt;/li>
&lt;li>在命令行中通过 GitHub CLI 使用&lt;/li>
&lt;li>在 GitHub.com 上，具有 Copilot Enterprise 订阅时&lt;/li>
&lt;/ul></description></item></channel></rss>